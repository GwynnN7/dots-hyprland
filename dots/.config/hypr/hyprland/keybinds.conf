#!
##! Shell
bindid = Super, Super_L, Toggle overview, global, quickshell:overviewToggleRelease # Launcher
bindid = Super, Super_R, Toggle overview, global, quickshell:overviewToggleRelease # [hidden] Toggle overview/launcher
bind = Super, Super_L, exec, qs -c $qsConfig ipc call TEST_ALIVE || pkill fuzzel || fuzzel # [hidden] Launcher (fallback)
bind = Super, Super_R, exec, qs -c $qsConfig ipc call TEST_ALIVE || pkill fuzzel || fuzzel # [hidden] Launcher (fallback)
binditn = Super, catchall, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind = Ctrl, Super_L, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind = Ctrl, Super_R, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind = Super, mouse:272, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind = Super, mouse:273, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind = Super, mouse:274, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind = Super, mouse:275, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind = Super, mouse:276, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind = Super, mouse:277, global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind = Super, mouse_up,  global, quickshell:overviewToggleReleaseInterrupt # [hidden]
bind = Super, mouse_down,global, quickshell:overviewToggleReleaseInterrupt # [hidden]

bindit = ,Super_L, global, quickshell:workspaceNumber # [hidden]
bindit = ,Super_R, global, quickshell:workspaceNumber # [hidden]
#/# bind = Super, Tab || B,, # Left sidebar
bindd = Super, Tab, Toggle left sidebar, global, quickshell:sidebarLeftToggle # [hidden]
bind = Super, B, global, quickshell:sidebarLeftToggle # [hidden]
bindd = Super, N, Toggle right sidebar, global, quickshell:sidebarRightToggle # Right sidebar
bindd = Super, M, Toggle media controls, global, quickshell:mediaControlsToggle # Media controls
bindd = Super, Comma, Toggle bar, global, quickshell:barToggle # Toggle bar
bindd = Super, K, Toggle on-screen keyboard, global, quickshell:oskToggle # OnScreen keyboard
bind = Super, Escape, exec, qs -c $qsConfig ipc call TEST_ALIVE || pkill wlogout || wlogout -p layer-shell # [hidden] Session menu (fallback)
bindd = Super, Y, Toggle wallpaper selector, global, quickshell:wallpaperSelectorToggle # Wallpaper selector
bindd = Super+Alt, Y, Select random wallpaper, global, quickshell:wallpaperSelectorRandom # Random wallpaper
bindd = Super, Y, Change wallpaper, exec, qs -c $qsConfig ipc call TEST_ALIVE || ~/.config/quickshell/$qsConfig/scripts/colors/switchwall.sh # [hidden] Change wallpaper (fallback)
bindd = Super, Y, Change wallpaper, exec, qs -c $qsConfig ipc call TEST_ALIVE || ~/.config/quickshell/$qsConfig/scripts/colors/switchwall.sh # [hidden] Change wallpaper (fallback)
bindd = Super, Escape, Toggle session menu, global, quickshell:sessionToggle # Session menu
bindd = Super, L, Lock, exec, loginctl lock-session # Lock
bindld = Super+Shift, L, Suspend system, exec, systemctl suspend || loginctl suspend # Sleep
# bindl=,switch:on:Lid Switch, exec, systemctl suspend || loginctl suspend # [hidden] Suspend when laptop lid is closed, uncomment if for whatever reason it's not the default behavior
#/# bind = Super, ` || /,, # Cheatsheet
bindd = Super, code:49, Toggle cheatsheet, global, quickshell:cheatsheetToggle # [hidden]
bindd = Super, Slash, Toggle cheatsheet, global, quickshell:cheatsheetToggle # [hidden]
bind = Ctrl+Alt, Delete, exec, killall ags agsv1 gjs ydotool qs quickshell; qs -c $qsConfig & # Restart widgets

##! Utilities
# Screenshot, Record, OCR, Color picker, Clipboard history
bindd = Super, Z, Color picker, exec, hyprpicker -a # Pick color
bindd = Super, V, Clipboard history >> clipboard, global, quickshell:overviewClipboardToggle # Clipboard
bindd = Super, Period, Emoji >> clipboard, global, quickshell:overviewEmojiToggle # Emoji
bindd = Super, V, Copy clipboard history entry, exec, qs -c $qsConfig ipc call TEST_ALIVE || pkill fuzzel || cliphist list | fuzzel --match-mode fzf --dmenu | cliphist decode | wl-copy # [hidden] Clipboard history >> clipboard (fallback)
bindd = Super, Period, Copy an emoji, exec, qs -c $qsConfig ipc call TEST_ALIVE || pkill fuzzel || ~/.config/hypr/hyprland/scripts/fuzzel-emoji.sh copy # [hidden] Emoji >> clipboard (fallback)
bind = Super+Shift, S, exec, qs -c $qsConfig ipc call TEST_ALIVE || pidof slurp || hyprshot --freeze --clipboard-only --mode region --silent # [hidden] Screen snip (fallback)
bind = Super+Alt, S, exec, qs -c $qsConfig ipc call TEST_ALIVE || pidof slurp || ~/.config/hypr/hyprland/scripts/snip_to_search.sh # [hidden] Google Lens (fallback)
bind = Super+Alt, S, global, quickshell:regionSearch # Google Lens
bind = Super+Shift, Z, global, quickshell:regionOcr # Character recognition
bind = Super+Shift, Z,exec, qs -c $qsConfig ipc call TEST_ALIVE || pidof slurp || grim -g "$(slurp $SLURP_ARGS)" "/tmp/ocr_image.png" && tesseract "/tmp/ocr_image.png" stdout -l $(tesseract --list-langs | awk 'NR>1{print $1}' | tr '\\n' '+' | sed 's/\\+$/\\n/') | wl-copy && rm "/tmp/ocr_image.png" # [hidden]
bindd = Super+Shift, mouse:273, Generate AI summary for selected text, exec, ~/.config/hypr/hyprland/scripts/ai/primary-buffer-query.sh # AI summary for selected text
bind = Ctrl, Escape, exec, ~/.config/hypr/hyprland/scripts/launch_first_available.sh "kitty -1 fish -C btop" # Task manager

#!
##! Window
bindm = Super, mouse:272, movewindow # Move
bindm = Super, mouse:274, killactive # [hidden]
bindm = Super, mouse:273, resizewindow # Resize
#/# bind = Super, ←/↑/→/↓,, # Focus in direction
bind = Super, Left, movefocus, l # [hidden]
bind = Super, Right, movefocus, r # [hidden]
bind = Super, Up, movefocus, u # [hidden]
bind = Super, Down, movefocus, d # [hidden]
bind = Super, BracketLeft, movefocus, l # [hidden]
bind = Super, BracketRight, movefocus, r # [hidden]
#/# bind = Super+Shift, ←/↑/→/↓,, # Move in direction
bind = Super+Shift, Left, movewindow, l # [hidden]
bind = Super+Shift, Right, movewindow, r # [hidden]
bind = Super+Shift, Up, movewindow, u # [hidden]
bind = Super+Shift, Down, movewindow, d # [hidden]
bind = Super, F, fullscreen, 1 # Maximize
bind = Super+Alt, F, fullscreen, 0 # Fullscreen
bind = Super+Ctrl, F, fullscreenstate, 0 3 # [hidden]
bind = Super, G, togglefloating, # Float/Tile
#/# binde = Super, ; || ',, # Adjust split ratio
binde = Super, Semicolon, splitratio, -0.2 # [hidden]
binde = Super, Apostrophe, splitratio, +0.2 # [hidden]
#/# bind = Super, Q || C,, # Close window
bind = Alt, F4, killactive, # [hidden] 
bind = Super, C, killactive, # [hidden] 
bind = Super, Q, killactive, # [hidden] 
bind = Super+Alt, C, exec, hyprctl kill # Forcefully zap a window

##! Workspace
# Focus
#/# bind = Super, Hash,, # Focus workspace
bind = Super, code:10, exec, ~/.config/hypr/hyprland/scripts/workspace_action.sh split-workspace 1 # [hidden]
bind = Super, code:11, exec, ~/.config/hypr/hyprland/scripts/workspace_action.sh split-workspace 2 # [hidden]
bind = Super, code:12, exec, ~/.config/hypr/hyprland/scripts/workspace_action.sh split-workspace 3 # [hidden]
bind = Super, code:13, exec, ~/.config/hypr/hyprland/scripts/workspace_action.sh split-workspace 4 # [hidden]
bind = Super, D, split-cycleworkspaces, +1 # Focus workspace right
bind = Super, A, split-cycleworkspaces, -1 # Focus workspace left
#/# bind = Super, Scroll ↑/↓,, # Focus left/right.
bind = Super, mouse_down,  split-cycleworkspaces, -1 # [hidden]
bind = Super, mouse_up,  split-cycleworkspaces, +1 # [hidden]
#/# bind = Super+Shift, Hash,, # Move to workspace
# Move
bind = Super+Shift, code:10, exec, ~/.config/hypr/hyprland/scripts/workspace_action.sh split-movetoworkspace 1 # [hidden]
bind = Super+Shift, code:11, exec, ~/.config/hypr/hyprland/scripts/workspace_action.sh split-movetoworkspace 2 # [hidden]
bind = Super+Shift, code:12, exec, ~/.config/hypr/hyprland/scripts/workspace_action.sh split-movetoworkspace 3 # [hidden]
bind = Super+Shift, code:13, exec, ~/.config/hypr/hyprland/scripts/workspace_action.sh split-movetoworkspace 4 # [hidden]
bind = Super+Shift, A, split-movetoworkspace, -1 # Move to workspace left
bind = Super+Shift, D, split-movetoworkspace, +1 # Move to workspace right
#/# bind = Super+Shift, Scroll ↑/↓,, # Move to workspace left/right
bind = Super+Shift, mouse_down, split-movetoworkspace, -1 # [hidden]
bind = Super+Shift, mouse_up, split-movetoworkspace, +1 # [hidden]
# Special
bind = Super, Space, togglespecialworkspace, # Toggle scratchpad
bind = Super+Shift, Space, movetoworkspace, special # Move to scratchpad
bind = Ctrl+Shift, F11, togglespecialworkspace # [hidden]

#!
##! Screen
bindld = ,Print, Screenshot >> clipboard ,exec,grim - | wl-copy # Screenshot
bindld = Super,Print, Screenshot >> clipboard & save, exec, mkdir -p $(xdg-user-dir PICTURES)/Screenshots && grim $(xdg-user-dir PICTURES)/Screenshots/Screenshot_"$(date '+%Y-%m-%d_%H.%M.%S')".png # Save Screenshot
bind = Super+Shift, S, global, quickshell:regionScreenshot # Screen snip
# Record
bindl = Super+Shift, R, exec, ~/.config/quickshell/$qsConfig/scripts/videos/record.sh --fullscreen --sound # Record screen (with sound)
bindl = Super+Alt, R, exec, ~/.config/quickshell/$qsConfig/scripts/videos/record.sh --fullscreen # Record screen (no sound)
bindl = Super+Ctrl, R, global, quickshell:regionRecord # Record region (no sound)
bindl = Super+Ctrl, R, exec, qs -c $qsConfig ipc call TEST_ALIVE || ~/.config/quickshell/$qsConfig/scripts/videos/record.sh # [hidden] Record region (no sound) (fallback)
# Zoom
binde = Super, Minus, exec, qs -c $qsConfig ipc call zoom zoomOut # Zoom out
binde = Super, Equal, exec, qs -c $qsConfig ipc call zoom zoomIn # Zoom in
binde = Super, Minus, exec, qs -c $qsConfig ipc call TEST_ALIVE || ~/.config/hypr/hyprland/scripts/zoom.sh decrease 0.1 # [hidden] Zoom out
binde = Super, Equal, exec, qs -c $qsConfig ipc call TEST_ALIVE || ~/.config/hypr/hyprland/scripts/zoom.sh increase 0.1 # [hidden] Zoom in
# Zoom with keypad
binde = Super, code:82, exec, qs -c $qsConfig ipc call zoom zoomOut # [hidden] Zoom out
binde = Super, code:86, exec, qs -c $qsConfig ipc call zoom zoomIn # [hidden] Zoom in
binde = Super, code:82, exec, qs -c $qsConfig ipc call TEST_ALIVE || ~/.config/hypr/hyprland/scripts/zoom.sh decrease 0.1 # [hidden] Zoom out
binde = Super, code:86, exec, qs -c $qsConfig ipc call TEST_ALIVE || ~/.config/hypr/hyprland/scripts/zoom.sh increase 0.1 # [hidden] Zoom in

##! Media
bindl = ,XF86AudioNext, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"` # [hidden]
bindl = ,XF86AudioPrev, exec, playerctl previous # [hidden]
#/# bind = Super, MouseBack,, # Previous track
bind = Super, mouse:275, exec, playerctl previous # [hidden]
#/# bind = Super, MouseForward,, # Next track
bind = Super, mouse:276, exec, playerctl next || playerctl position `bc <<< "100 * $(playerctl metadata mpris:length) / 1000000 / 100"` # [hidden]
bindl = Super+Ctrl+Shift, F11, exec, playerctl play-pause # Play/pause media
bindl = ,XF86AudioPlay, exec, playerctl play-pause # [hidden]
bindl = ,XF86AudioPause, exec, playerctl play-pause # [hidden]
bindle= ,XF86MonBrightnessUp, exec, qs -c $qsConfig ipc call brightness increment || brightnessctl s 5%+ # [hidden]
bindle= ,XF86MonBrightnessDown, exec, qs -c $qsConfig ipc call brightness decrement || brightnessctl s 5%- # [hidden]
bindle= ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%+ # [hidden]
bindle= ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 2%- # [hidden]
bindl = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_SINK@ toggle # [hidden]
bindl = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_SOURCE@ toggle # [hidden]
bindr = CTRL+Shift, F12, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle # [hidden]

##! Apps
bind = Super, T, exec, ~/.config/hypr/hyprland/scripts/launch_first_available.sh  "${TERMINAL}" "kitty -1" # Terminal
bind = Super, Return, exec, ~/.config/hypr/hyprland/scripts/launch_first_available.sh "${TERMINAL}" "kitty -1"# [hidden]
bind = Ctrl+Alt, T, exec, ~/.config/hypr/hyprland/scripts/launch_first_available.sh "${TERMINAL}" "kitty -1" # [hidden] (terminal)
bind = Super, E, exec, ~/.config/hypr/hyprland/scripts/launch_first_available.sh "kitty -1 fish -C y"  # Yazi
bind = Super, R, exec, ~/.config/hypr/hyprland/scripts/launch_first_available.sh "nautilus" "dolphin" "nemo" "kitty -1 fish -C yazi" # File Manager
bind = Super, W, exec, ~/.config/hypr/hyprland/scripts/launch_first_available.sh "google-chrome-stable" "zen-browser" # Browser
bind = Super, S, exec, ~/.config/hypr/hyprland/scripts/launch_first_available.sh "code" "kitty -1 fish -C nvim" # Code editor
bind = Super, X, exec, ~/.config/hypr/hyprland/scripts/launch_first_available.sh "kitty -1 fish -C nvim" # Text editor
bind = Super, I, exec, XDG_CURRENT_DESKTOP=gnome ~/.config/hypr/hyprland/scripts/launch_first_available.sh "qs -p ~/.config/quickshell/$qsConfig/settings.qml" "systemsettings" "gnome-control-center" "better-control" # Settings app

